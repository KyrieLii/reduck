"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _babelChain = require("@modern-js/babel-chain");

var _utils = require("@modern-js/utils");

var _generate = require("./generate");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const defaultOptions = {
  appDirectory: process.cwd(),
  metaName: 'modern-js',
  target: 'client',
  modules: false,
  useBuiltIns: 'entry',
  useModern: false,
  useLegacyDecorators: true,
  useTsLoader: false,
  lodash: {},
  styledComponents: {}
};
/* eslint-disable  no-param-reassign */

function _default(api, options) {
  var _options;

  api.cache(true);
  options = _objectSpread(_objectSpread({}, defaultOptions), (_options = options) !== null && _options !== void 0 ? _options : {});
  const babelChain = (0, _generate.generate)(options, options.chain || (0, _babelChain.createBabelChain)());

  if (options.userBabelConfig) {
    return (0, _utils.applyOptionsChain)(babelChain.toJSON(), options.userBabelConfig);
  }

  return babelChain.toJSON();
}
/* eslint-enable  no-param-reassign */