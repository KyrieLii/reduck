import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { useContext } from 'react';
import { RuntimeReactContext } from '@modern-js/runtime-core';
import { createStore } from '@modern-js-reduck/store';
import { Provider } from '@modern-js-reduck/react';
import hoistNonReactStatics from 'hoist-non-react-statics';
import { jsx as _jsx } from "react/jsx-runtime";

var state = function state(config) {
  return {
    name: '@modern-js/plugin-state',
    setup: function setup() {
      return {
        hoc: function hoc(_ref, next) {
          var App = _ref.App;

          var getStateApp = function getStateApp(props) {
            // eslint-disable-next-line react-hooks/rules-of-hooks
            var context = useContext(RuntimeReactContext);
            return /*#__PURE__*/_jsx(Provider, {
              store: context.store,
              config: config,
              children: /*#__PURE__*/_jsx(App, _objectSpread({}, props))
            });
          };

          return next({
            App: hoistNonReactStatics(getStateApp, App)
          });
        },
        init: function init(_ref2, next) {
          var context = _ref2.context;
          var storeConfig = config || {};

          if (typeof window !== 'undefined') {
            var _window, _window$_SSR_DATA, _window$_SSR_DATA$dat;

            storeConfig.initialState = storeConfig.initialState || ((_window = window) === null || _window === void 0 ? void 0 : (_window$_SSR_DATA = _window._SSR_DATA) === null || _window$_SSR_DATA === void 0 ? void 0 : (_window$_SSR_DATA$dat = _window$_SSR_DATA.data) === null || _window$_SSR_DATA$dat === void 0 ? void 0 : _window$_SSR_DATA$dat.storeState) || {};
          }

          context.store = createStore(storeConfig);
          next({
            context: context
          });
        },
        pickContext: function pickContext(_ref3, next) {
          var context = _ref3.context,
              pickedContext = _ref3.pickedContext;
          return next({
            context: context,
            pickedContext: _objectSpread(_objectSpread({}, pickedContext), {}, {
              store: context.store
            })
          });
        }
      };
    }
  };
};

export default state;
export * from "../plugins";