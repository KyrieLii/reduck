"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "buildLifeCycle", {
  enumerable: true,
  get: function () {
    return _build.lifecycle;
  }
});
Object.defineProperty(exports, "devLifeCycle", {
  enumerable: true,
  get: function () {
    return _dev.lifecycle;
  }
});
exports.lifecycle = exports.hooks = void 0;

var _build = require("./build");

var _dev = require("./dev");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const lifecycle = () => {
  (0, _dev.lifecycle)();
  (0, _build.lifecycle)();
};

exports.lifecycle = lifecycle;

const hooks = _objectSpread(_objectSpread({}, _build.buildHooks), _dev.devHooks);

exports.hooks = hooks;