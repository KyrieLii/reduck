"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrap = exports.initialWrapper = void 0;

var _react = _interopRequireDefault(require("react"));

var _plugin = require("@modern-js/plugin");

var _plugin2 = require("./plugin");

var _runtimeContext = require("./runtime-context");

const _excluded = ["context"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const initialWrapper = (plugins, manager = _plugin2.runtime) => {
  manager.usePlugin(...plugins);
  return (App, config) => wrap(App, config, manager);
};

exports.initialWrapper = initialWrapper;

const wrap = (App, {}, manager = _plugin2.runtime) => {
  const runner = manager.init({});
  const container = (0, _plugin.createContainer)({
    App: _plugin2.AppComponentContext.create(App)
  });

  const WrapperComponent = props => {
    const element = /*#__PURE__*/_react.default.createElement(App, _objectSpread({}, props), props.children);

    return runner.provide({
      element,
      props: _objectSpread({}, props),
      context: {}
    }, {
      container,
      onLast: ({
        element
      }) => element
    });
  };

  return runner.hoc({
    App: WrapperComponent
  }, {
    container,
    onLast: ({
      App
    }) => {
      const WrapComponent = _ref => {
        let {
          context
        } = _ref,
            props = _objectWithoutProperties(_ref, _excluded);

        return /*#__PURE__*/_react.default.createElement(_runtimeContext.RuntimeReactContext.Provider, {
          value: context
        }, /*#__PURE__*/_react.default.createElement(App, props));
      };

      return WrapComponent;
    }
  });
};

exports.wrap = wrap;