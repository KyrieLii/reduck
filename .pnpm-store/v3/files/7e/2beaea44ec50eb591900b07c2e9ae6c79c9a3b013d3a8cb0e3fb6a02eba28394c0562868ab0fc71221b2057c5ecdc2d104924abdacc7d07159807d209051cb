function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { isFastRefresh } from '@modern-js/utils';
export default (() => ({
  name: '@modern-js/plugin-fast-refresh',
  setup: () => ({
    config() {
      return {
        tools: {
          webpackChain: (chain, {
            name,
            CHAIN_ID
          }) => {
            if (name === 'client' && isFastRefresh()) {
              const ReactFastRefreshPlugin = require('@pmmmwh/react-refresh-webpack-plugin');

              chain.plugin(CHAIN_ID.PLUGIN.REACT_FAST_REFRESH).use(ReactFastRefreshPlugin, [{
                overlay: false,
                exclude: [/node_modules/]
              }]);
              const loaders = chain.module.rule(CHAIN_ID.RULE.LOADERS);
              const babelOptions = loaders.oneOf(CHAIN_ID.ONE_OF.JS).use(CHAIN_ID.USE.BABEL).get('options');
              loaders.oneOf(CHAIN_ID.ONE_OF.JS).use(CHAIN_ID.USE.BABEL).options(_objectSpread(_objectSpread({}, babelOptions), {}, {
                plugins: [...(babelOptions.plugins || []), require.resolve('react-refresh/babel')]
              }));
            }
          }
        }
      };
    }

  })
}));