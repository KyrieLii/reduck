"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bundle", {
  enumerable: true,
  get: function () {
    return _bundle.bundle;
  }
});
exports.bundleRequire = bundleRequire;

var _utils = require("@modern-js/utils");

var _bundle = require("./bundle");

function deleteRequireCache(path) {
  if (require.cache[path]) {
    delete require.cache[path];
  }

  if (module.children) {
    module.children = module.children.filter(item => item.filename !== path);
  }
}

async function bundleRequire(filepath, options) {
  const configFile = await (0, _bundle.bundle)(filepath, options);
  let mod;
  const req = (options === null || options === void 0 ? void 0 : options.require) || require;

  try {
    mod = await req(configFile); // Webpack will check require history for persistent cache.
    // If webpack can not resolve the file, the previous cache pack will become invalid.
    // The bundled file is temporary, so we should clear the require history to avoid breaking the webpack cache.

    deleteRequireCache(configFile);
  } finally {
    _utils.fs.unlinkSync(configFile);
  }

  return mod;
}